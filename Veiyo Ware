local repo = 'https://raw.githubusercontent.com/wally-rblx/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    -- Set Center to true if you want the menu to appear in the center
    -- Set AutoShow to true if you want the menu to appear when it is created
    -- Position and Size are also valid options here
    -- but you do not need to define them unless you are changing them :)

    Title = 'VeiyoðŸ‘‘',
    Center = true, 
    AutoShow = true,
})

-- You do not have to set your tabs & groups up this way, just a prefrence.
local Tabs = {
    -- Creates a new tab titled Main
    Main = Window:AddTab('Target'), 
    Visual = Window:AddTab('Visual'), 
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

-- Groupbox and Tabbox inherit the same functions
-- except Tabboxes you have to call the functions on a tab (Tabbox:AddTab(name))
local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Target')
local RightGroupBox = Tabs.Main:AddRightGroupbox('Target Settings')

-- Tabboxes are a tiny bit different, but here's a basic example:
--[[

local TabBox = Tabs.Main:AddLeftTabbox() -- Add Tabbox on left side

local Tab1 = TabBox:AddTab('Tab 1')
local Tab2 = TabBox:AddTab('Tab 2')

-- You can now call AddToggle, etc on the tabs you added to the Tabbox
]]

-- Groupbox:AddToggle
-- Arguments: Index, Options


LeftGroupBox:AddToggle('Showdot', {
    Text = 'ShowBox',
    Default = true, -- Default value (true / false)
    Tooltip = '', -- Information shown when you hover over the toggle
});


LeftGroupBox:AddToggle('Target', {
    Text = 'Target',
    Default = true, -- Default value (true / false)
    Tooltip = '', -- Information shown when you hover over the toggle
})
Toggles.Target:OnChanged(function()
    -- here we get our toggle object & then get its value
    getgenv().Target = Toggles.Target.Value
end)

-- This should print to the console: "My toggle state changed! New value: false"
Toggles.Target:SetValue(false)

LeftGroupBox:AddToggle('Airshot', {
    Text = 'Airshot',
    Default = true, -- Default value (true / false)
    Tooltip = '', -- Information shown when you hover over the toggle
})
Toggles.Airshot:OnChanged(function()
    -- here we get our toggle object & then get its value
    getgenv().AirshotFunccc = Toggles.Airshot.Value
end)

-- This should print to the console: "My toggle state changed! New value: false"
Toggles.Airshot:SetValue(false)


LeftGroupBox:AddToggle('NotifMode', {
    Text = 'Notification',
    Default = true, -- Default value (true / false)
})

LeftGroupBox:AddToggle('ChatMode', {
    Text = 'Chat Mode',
    Default = true, -- Default value (true / false)
    Tooltip = '', -- Information shown when you hover over the toggle
})
Toggles.ChatMode:OnChanged(function()
    -- here we get our toggle object & then get its value
    getgenv().ChatMode = Toggles.ChatMode.Value
end)

-- This should print to the console: "My toggle state changed! New value: false"
Toggles.ChatMode:SetValue(false)



Toggles.NotifMode:OnChanged(function()
... (416 lines left)
